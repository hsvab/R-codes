# Bibliotecas ----
install.packages("tidyverse")
install.packages("units")
install.packages("sf")
install.packages("ggsn")
install.packages("viridis")
library(tidyverse)
library(units)
library(sf)
library(ggsn)
library(viridis)

#############################################
# Plot de frequencias por link pelo GTFS 2019
# GTFS (General Transit Feed Specification)
# Autoria: Beatriz Moura
#############################################


# Variáveis iniciais ----

# Projeções
prjutm <- '+proj=utm +zone=23 +south +datum=WGS84 +units=m +no_defs'
prjdegrees <- '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'

# Cores do mapa
colBorder <- 'white'
colMuni <- 'grey80'
colWater <- 'grey95' 
colGreen <-  '#D9E7D1'

# Leitura de arquivos ----

# rede com qtde de partidas/hora por links
load('data/rda/net_frequencies.rda')

# shapefiles de base 
sp <- st_read('data/shp/MSP.shp') %>% st_transform(prjutm)
muni <- st_read('data/shp/Outros_muni-MSP.shp') %>% st_transform(prjutm) 
massa <- st_read('data/shp/Massa_dagua_MSP.shp') %>% st_transform(prjutm) %>% 
  group_by() %>% 
  summarise
rios <- st_read('data/shp/Rio_MSP.shp') %>% 
  st_transform(prjutm) %>% 
  group_by() %>% 
  summarise
verde <- st_read('data/shp/Verde_MSP.shp')

# Mapa de frequências ----

# removendo vias de acesso de terminais (limite de freq = 300)
limite <- 300
net_filt <- net_sf %>% filter(freq <= limite)
breaks <- seq(0, limite, by = 50)

# Mapa em si
ggplot() +
  # Compondo as camadas do mapa
  geom_sf(data = muni, fill = colMuni, color = colBorder, size = .7) +
  geom_sf(data = net_filt, aes(color = freq, size = freq), lineend = 'round', show.legend = 'line')+
  geom_sf(data = massa, fill = colWater, color = colWater, size = 0.3) +
  geom_sf(data = rios, color = colWater, size = 0.7) +
  geom_sf(data = verde, fill = colGreen, color = 'transparent') +
  # Inserindo o símbolo de norte
  north(sp, symbol = 13) +
  # Inserindo escala gráfica
  scalebar(dist = 5, dist_unit = 'km',
           transform = F, model='WGS84',
           x.min = 314223.75,
           x.max = 360463.96,
           y.min = 7346293.52,
           y.max = 7413300.44,
           box.color = 'grey10',
           border.size = .2,
           st.color = 'grey10',
           st.size = 5,
           height = .01) + 
  # Inserindo escala de cores
  scale_color_viridis_c('Frequência (# partidas/hora)',
                        begin = 0.2, end = 0.8, option = 'B', direction = -1,
                        breaks = breaks,
                        labels = breaks,
                        limits = c(0,limite),
                        guide=guide_legend(title.position = 'top',
                                           label.position = 'bottom',
                                           nrow = 1))+
  # Definido que a escala de cores é contínua
  scale_size_continuous('Frequência (# partidas/hora)',
                        range = c(.3, 2.3),
                        breaks = breaks,
                        labels = breaks,
                        limits = c(0,limite),
                        guide = guide_legend(title.position = 'top',
                                             label.position = 'bottom',
                                             nrow = 1)) +
  coord_sf(ylim = c(7346293.52,7413300.44), 
           xlim = c(314223.75, 360463.96)) +
  # Trabalhando o tema
  theme_bw() +
  theme(panel.border = element_rect(color = 'grey85'),
        # eixos
        axis.line = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        axis.title = element_blank(),
        # grid
        panel.grid = element_line(color=colWater),
        # legenda
        legend.position = 'bottom',
        legend.box = 'horizontal',
        legend.direction = 'horizontal',
        legend.spacing = unit(.3, 'cm'),
        legend.text = element_text(size=14),
        legend.title = element_text(size=16),
        # facet
        strip.background = element_blank(), 
        strip.text = element_text(size = 14),
        # background
        panel.background = element_rect(fill=colWater),
        plot.background = element_blank())

ggsave('Mapa_frequencias_2019.png', dpi = 500, width = 18, height = 30, units = 'cm')  
